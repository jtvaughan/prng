Title: Generate and Print Pseudo-Random Numbers
Author: Jordan Vaughan
Date: May 23, 2015
Format: Plain text
Encoding: UTF-8


INTRODUCTION

    prng(1) is a compact tool for generating an indefinite stream
    of pseudo-random unsigned integers using the xorshift* and
    xorshift+ algorithms described by Sebastiano Vigna (vigna@acm.org)
    at <http://xorshift.di.unimi.it/>.

INSTALLATION

    prng(1) comes with a Makefile.  To build prng(1), navigate to
    the source directory (the directory containing this README
    file) and run make(1):

        $ make

    This should build prng(1) in the same directory.

    To install prng(1), run make(1) thus:

        $ make install

    You can also build a simple tar(1) file containing the
    executable, the public domain dedication file, and this
    README file thus:

        $ make dist

    You can delete the built executable, object files, and
    the tar(1) file by running:

        $ make clean

    Several build parameters (such as CFLAGS and LDFLAGS)
    and installation parameters (such as BINDIR, INSTALL_USER,
    and INSTALL_GROUP) can be set prior to running make(1).
    Please read the top of the Makefile for directions.

USE

    Usage: prng [-h] [-s SEED] [-u] [-x | -X] [-32] [algorithm]

    Description:

        Print an indefinite stream of pseudo-random numbers generated by an
        Xorshift pseudo-random number generator (PRNG).

    Algorithms:

        xorshift64*
        xorshift1024*
        xorshift4096*
        xorshift128+

        Default: xorshift1024*

    Options:

        -h                     show this long help message and exit
        -s SEED                set the generator's seed to the specified 64-bit
                               integer (use the current time in seconds
                               if omitted)
        -u                     disable standard output buffering
        -x                     print generated values in hexadecimal with
                               lowercase letters instead of decimal
        -X                     print generated values in hexadecimal with
                               uppercase letters instead of decimal
        -32                    print 32-bit values instead of 64-bit ones

COPYRIGHT

    Copyright?  Hah!  Here's my "copyright":

        This tool was written in 2015 by Jordan Vaughan.

        To the extent possible under law, the author(s) have dedicated all
        copyright and related and neighboring rights to this software to the
        public domain worldwide. This software is distributed without any
        warranty.

        You should have received a copy of the CC0 Public Domain Dedication
        along with this software. If not, see
        http://creativecommons.org/publicdomain/zero/1.0/.

    A full copy of the public domain dedication is in COPYING.
